# –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —ç—Ñ–µ–º–µ—Ä–∏–¥
# –ó–∞–ø—É—Å–∫–∞–µ—Ç Python –∏ PHP —Ç–µ—Å—Ç—ã, –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host "üöÄ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –°–†–ê–í–ù–ï–ù–ò–ï –≠–§–ï–ú–ï–†–ò–î" -ForegroundColor Green
Write-Host "   –¢–æ—á–Ω–æ—Å—Ç—å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å: JPL DE440, DE431, EPM2021, Swiss Ephemeris" -ForegroundColor Gray
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..." -ForegroundColor Yellow
$pythonCmd = Get-Command python -ErrorAction SilentlyContinue
if (-not $pythonCmd) {
    Write-Host "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Python: $($pythonCmd.Source)" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è PHP
$phpCmd = Get-Command php -ErrorAction SilentlyContinue
if (-not $phpCmd) {
    Write-Host "‚ùå PHP –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ PHP: $($phpCmd.Source)" -ForegroundColor Green
Write-Host ""

# –®–∞–≥ 1: Python comparison (SPICE ephemerides)
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host "–≠–¢–ê–ü 1: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ SPICE —ç—Ñ–µ–º–µ—Ä–∏–¥ (Python + calceph)" -ForegroundColor Green
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è calceph
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ calceph Python bindings..." -ForegroundColor Yellow
$calcephTest = python -c "import calceph; print(calceph.__version__)" 2>&1
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è  calceph Python bindings –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Yellow
    Write-Host "üì¶ –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..." -ForegroundColor Yellow
    Write-Host ""

    Push-Location vendor/calceph-4.0.1/pythonapi
    python setup.py install --user
    $installResult = $LASTEXITCODE
    Pop-Location

    if ($installResult -ne 0) {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å calceph!" -ForegroundColor Red
        Write-Host "   –ü—Ä–æ–ø—É—Å–∫–∞–µ–º Python —Ç–µ—Å—Ç—ã..." -ForegroundColor Yellow
        $pythonSuccess = $false
    } else {
        Write-Host "‚úÖ calceph —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        $pythonSuccess = $true
    }
} else {
    Write-Host "‚úÖ calceph version: $calcephTest" -ForegroundColor Green
    $pythonSuccess = $true
}

Write-Host ""

if ($pythonSuccess) {
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ Python comparison..." -ForegroundColor Cyan
    Write-Host ""

    python tools/comprehensive_comparison.py

    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Python comparison –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!" -ForegroundColor Red
        $pythonSuccess = $false
    } else {
        Write-Host ""
        Write-Host "‚úÖ Python comparison –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
    }
}

Write-Host ""

# –®–∞–≥ 2: Swiss Ephemeris comparison (PHP + FFI)
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host "–≠–¢–ê–ü 2: Swiss Ephemeris —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ (PHP + FFI)" -ForegroundColor Green
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Swiss Ephemeris –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
$swissLib = "vendor/swisseph/libswe.dll"
if (-not (Test-Path $swissLib)) {
    Write-Host "‚ö†Ô∏è  Swiss Ephemeris –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $swissLib" -ForegroundColor Yellow
    Write-Host "   –ü—Ä–æ–ø—É—Å–∫–∞–µ–º Swiss Eph —Ç–µ—Å—Ç—ã..." -ForegroundColor Yellow
    $swissSuccess = $false
} else {
    Write-Host "‚úÖ Swiss Ephemeris: $swissLib" -ForegroundColor Green
    Write-Host ""

    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ PHP comparison..." -ForegroundColor Cyan
    Write-Host ""

    php test_swiss_comparison.php

    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå PHP comparison –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!" -ForegroundColor Red
        $swissSuccess = $false
    } else {
        Write-Host ""
        Write-Host "‚úÖ PHP comparison –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
        $swissSuccess = $true
    }
}

Write-Host ""

# –®–∞–≥ 3: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host "–≠–¢–ê–ü 3: –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤" -ForegroundColor Green
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host ""

$pythonResultsFile = "COMPREHENSIVE_COMPARISON_RESULTS.json"
$swissResultsFile = "SWISS_EPHEMERIS_COMPARISON.json"

if (-not (Test-Path $pythonResultsFile) -and -not (Test-Path $swissResultsFile)) {
    Write-Host "‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
Write-Host "üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å–≤–æ–¥–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã..." -ForegroundColor Cyan
Write-Host ""

$finalReport = @"
# üìä –§–ò–ù–ê–õ–¨–ù–û–ï –°–†–ê–í–ù–ï–ù–ò–ï –≠–§–ï–ú–ï–†–ò–î
## –¢–æ—á–Ω–æ—Å—Ç—å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞

**–î–∞—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")

---

## 1Ô∏è‚É£  –ò–°–¢–û–ß–ù–ò–ö–ò –î–ê–ù–ù–´–•

| –≠—Ñ–µ–º–µ—Ä–∏–¥–∞       | –¢–∏–ø       | –í—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ      | –¢–µ–ª | –§–æ—Ä–º–∞—Ç      | –†–∞–∑–º–µ—Ä      |
|-----------------|-----------|-------------------------|-----|-------------|-------------|
| **JPL DE440**   | NASA JPL  | 1550-2650 AD (1,100 –ª–µ—Ç)| 12  | SPICE SPK   | ~97.5 MB    |
| **JPL DE431**   | NASA JPL  | -13200 to +17191 (30k –ª–µ—Ç)| 14 | SPICE SPK  | ~2.6 GB√ó2   |
| **EPM2021**     | –ò–ü–ê –†–ê–ù   | 1788-2215 AD (427 –ª–µ—Ç)  | 22  | SPICE SPK   | ~147 MB     |
| **Swiss Eph**   | Astrodienst| Variable coverage      | 20+ | Proprietary | ~200 MB     |

---

## 2Ô∏è‚É£  –ù–ê–¢–ò–í–ù–´–ï –ò–ù–¢–ï–†–í–ê–õ–´ (–¥–Ω–∏)

"@

# –ß—Ç–µ–Ω–∏–µ Python —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if (Test-Path $pythonResultsFile) {
    $pythonData = Get-Content $pythonResultsFile | ConvertFrom-Json

    if ($pythonData.intervals) {
        $finalReport += "`n### SPICE —ç—Ñ–µ–º–µ—Ä–∏–¥—ã (–∏–∑ calceph_inspector)`n`n"
        $finalReport += "| –¢–µ–ª–æ         | DE440  | DE431  | EPM2021 | –õ—É—á—à–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª |`n"
        $finalReport += "|--------------|--------|--------|---------|-----------------|`n"

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–µ–ª–∞
        $allBodies = @()
        foreach ($eph in $pythonData.intervals.PSObject.Properties) {
            if ($eph.Value -is [PSCustomObject]) {
                foreach ($body in $eph.Value.PSObject.Properties.Name) {
                    if ($body -ne 'error' -and $allBodies -notcontains $body) {
                        $allBodies += $body
                    }
                }
            }
        }

        $allBodies = $allBodies | Sort-Object

        foreach ($body in $allBodies) {
            $de440 = if ($pythonData.intervals.DE440.$body) { "$($pythonData.intervals.DE440.$body)" } else { "-" }
            $de431 = if ($pythonData.intervals.DE431_Part1.$body) { "$($pythonData.intervals.DE431_Part1.$body)" } else { "-" }
            $epm = if ($pythonData.intervals.EPM2021.$body) { "$($pythonData.intervals.EPM2021.$body)" } else { "-" }

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª—É—á—à–∏–π (–Ω–∞–∏–º–µ–Ω—å—à–∏–π) –∏–Ω—Ç–µ—Ä–≤–∞–ª
            $values = @($de440, $de431, $epm) | Where-Object { $_ -ne "-" } | ForEach-Object { [double]$_ }
            $best = if ($values.Count -gt 0) {
                $min = ($values | Measure-Object -Minimum).Minimum
                switch ($min) {
                    { $_ -eq [double]$de440 } { "DE440 ‚úÖ" }
                    { $_ -eq [double]$de431 } { "DE431 ‚úÖ" }
                    { $_ -eq [double]$epm } { "EPM2021 ‚úÖ" }
                }
            } else { "-" }

            $finalReport += "| $($body.PadRight(12)) | $($de440.PadRight(6)) | $($de431.PadRight(6)) | $($epm.PadRight(7)) | $best |`n"
        }
    }
}

$finalReport += @"

---

## 3Ô∏è‚É£  –°–ö–û–†–û–°–¢–¨ –î–û–°–¢–£–ü–ê (–±–µ–Ω—á–º–∞—Ä–∫–∏)

### –¢–µ—Å—Ç–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è
- **–ò—Ç–µ—Ä–∞—Ü–∏–π**: 100 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –∫–∞–∂–¥–æ–π —ç—Ñ–µ–º–µ—Ä–∏–¥–µ
- **–¢–µ–ª–∞**: 10-12 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–µ–ª (Sun, Moon, –ø–ª–∞–Ω–µ—Ç—ã)
- **–≠–ø–æ—Ö–∏**: 4 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ (J2000, 2023, 2050, 1858)
- **–ú–µ—Ç—Ä–∏–∫–∞**: –í—Ä–µ–º—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –æ–¥–Ω–æ–≥–æ —Ç–µ–ª–∞ (–º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã)

"@

# –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å–∫–æ—Ä–æ—Å—Ç–∏
if (Test-Path $pythonResultsFile) {
    $pythonData = Get-Content $pythonResultsFile | ConvertFrom-Json

    if ($pythonData.performance) {
        $finalReport += "`n### SPICE —ç—Ñ–µ–º–µ—Ä–∏–¥—ã (Python + calceph)`n`n"
        $finalReport += "| –≠—Ñ–µ–º–µ—Ä–∏–¥–∞    | Mean (ms) | Median (ms) | Min (ms) | Max (ms) | Success % |`n"
        $finalReport += "|--------------|-----------|-------------|----------|----------|-----------|`n"

        foreach ($eph in $pythonData.performance.PSObject.Properties) {
            $perf = $eph.Value
            if ($perf.error) {
                $finalReport += "| $($eph.Name.PadRight(12)) | ERROR: $($perf.error) |`n"
            } else {
                $finalReport += "| $($eph.Name.PadRight(12)) | "
                $finalReport += "$([math]::Round($perf.mean_ms, 3).ToString().PadRight(9)) | "
                $finalReport += "$([math]::Round($perf.median_ms, 3).ToString().PadRight(11)) | "
                $finalReport += "$([math]::Round($perf.min_ms, 3).ToString().PadRight(8)) | "
                $finalReport += "$([math]::Round($perf.max_ms, 3).ToString().PadRight(8)) | "
                $finalReport += "$([math]::Round($perf.success_rate, 1))% |`n"
            }
        }
    }
}

if (Test-Path $swissResultsFile) {
    $swissData = Get-Content $swissResultsFile | ConvertFrom-Json

    if ($swissData.performance) {
        $finalReport += "`n### Swiss Ephemeris (PHP + FFI)`n`n"
        $finalReport += "| –ú–µ—Ç–æ–¥        | Mean (ms) | Median (ms) | Min (ms) | Max (ms) | Success % |`n"
        $finalReport += "|--------------|-----------|-------------|----------|----------|-----------|`n"

        $perf = $swissData.performance
        if ($perf.error) {
            $finalReport += "| Swiss FFI    | ERROR: $($perf.error) |`n"
        } else {
            $finalReport += "| Swiss FFI    | "
            $finalReport += "$([math]::Round($perf.mean_ms, 3).ToString().PadRight(9)) | "
            $finalReport += "$([math]::Round($perf.median_ms, 3).ToString().PadRight(11)) | "
            $finalReport += "$([math]::Round($perf.min_ms, 3).ToString().PadRight(8)) | "
            $finalReport += "$([math]::Round($perf.max_ms, 3).ToString().PadRight(8)) | "
            $finalReport += "$([math]::Round($perf.success_rate, 1))% |`n"
        }
    }
}

$finalReport += @"

---

## 4Ô∏è‚É£  –¢–û–ß–ù–û–°–¢–¨ (—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —ç—Ç–∞–ª–æ–Ω–æ–º JPL DE440)

### –ú–µ—Ç—Ä–∏–∫–∞
- **–≠—Ç–∞–ª–æ–Ω**: JPL DE440 (–Ω–∞—É—á–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç NASA)
- **–ú–µ—Ç—Ä–∏–∫–∞**: –ï–≤–∫–ª–∏–¥–æ–≤–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –≤ 3D –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ (–∫–º)
- **–°–∏—Å—Ç–µ–º–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç**: Barycentric ICRF/J2000 Cartesian (XYZ)

"@

# –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ—á–Ω–æ—Å—Ç–∏
if (Test-Path $pythonResultsFile) {
    $pythonData = Get-Content $pythonResultsFile | ConvertFrom-Json

    if ($pythonData.accuracy) {
        $finalReport += "`n### –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞`n`n"
        $finalReport += "| –≠—Ñ–µ–º–µ—Ä–∏–¥–∞    | Median (km) | Mean (km) | Min (km) | Max (km)   |`n"
        $finalReport += "|--------------|-------------|-----------|----------|------------|`n"

        foreach ($comp in $pythonData.accuracy.PSObject.Properties) {
            $acc = $comp.Value
            $ephName = $comp.Name -replace '_vs_DE440', ''

            if ($acc.error) {
                $finalReport += "| $($ephName.PadRight(12)) | ERROR: $($acc.error) |`n"
            } else {
                $finalReport += "| $($ephName.PadRight(12)) | "
                $finalReport += "$([math]::Round($acc.median_km, 2).ToString().PadRight(11)) | "
                $finalReport += "$([math]::Round($acc.mean_km, 2).ToString().PadRight(9)) | "
                $finalReport += "$([math]::Round($acc.min_km, 2).ToString().PadRight(8)) | "
                $finalReport += "$([math]::Round($acc.max_km, 2).ToString('N0').PadRight(10)) |`n"
            }
        }

        # –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —Ç–µ–ª–∞–º
        $finalReport += "`n### –¢–æ—á–Ω–æ—Å—Ç—å –ø–æ —Ç–µ–ª–∞–º (Median, km)`n`n"

        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç—Ñ–µ–º–µ—Ä–∏–¥
        $ephList = @()
        foreach ($comp in $pythonData.accuracy.PSObject.Properties) {
            if ($comp.Value.body_errors) {
                $ephList += ($comp.Name -replace '_vs_DE440', '')
            }
        }

        if ($ephList.Count -gt 0) {
            $finalReport += "| –¢–µ–ª–æ         | " + (($ephList | ForEach-Object { $_.PadRight(12) }) -join " | ") + " |`n"
            $finalReport += "|--------------|" + (($ephList | ForEach-Object { "------------" }) -join "-|-") + "-|`n"

            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–µ–ª–∞
            $allBodies = @()
            foreach ($comp in $pythonData.accuracy.PSObject.Properties) {
                if ($comp.Value.body_errors) {
                    foreach ($body in $comp.Value.body_errors.PSObject.Properties.Name) {
                        if ($allBodies -notcontains $body) {
                            $allBodies += $body
                        }
                    }
                }
            }

            $allBodies = $allBodies | Sort-Object

            foreach ($body in $allBodies) {
                $finalReport += "| $($body.PadRight(12)) | "

                foreach ($ephName in $ephList) {
                    $fullName = "${ephName}_vs_DE440"
                    $acc = $pythonData.accuracy.$fullName

                    if ($acc -and $acc.body_errors.$body) {
                        $median = [math]::Round($acc.body_errors.$body.median_km, 2)
                        $finalReport += "$($median.ToString().PadRight(12)) | "
                    } else {
                        $finalReport += "$('-'.PadRight(12)) | "
                    }
                }

                $finalReport += "`n"
            }
        }
    }
}

$finalReport += @"

---

## 5Ô∏è‚É£  –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò

### –ü–æ —Ç–æ—á–Ω–æ—Å—Ç–∏

1. **–î–ª—è –Ω–∞—É—á–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–æ–≤**: **JPL DE440** –∏–ª–∏ **JPL DE431**
   - Sub-meter –¥–æ meter —Ç–æ—á–Ω–æ—Å—Ç—å
   - –≠—Ç–∞–ª–æ–Ω NASA
   - –ü–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–µ–ª

2. **–î–ª—è –õ—É–Ω—ã –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø–ª–∞–Ω–µ—Ç**: **EPM2021**
   - –£–ª—É—á—à–µ–Ω–Ω—ã–µ LLR –¥–∞–Ω–Ω—ã–µ
   - –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã 2 –¥–Ω—è (vs 4-16 –¥–Ω–µ–π JPL)
   - Median error ~29 km ‚úÖ

3. **–î–ª—è –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏**: **Swiss Ephemeris**
   - –£–≥–ª–æ–≤–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å ~arcseconds ‚úÖ
   - –ë–æ–ª—å—à–∏–µ –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è (~84M km)
   - –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–ª–∞ (Chiron, Pholus, Nodes, Lilith)

### –ü–æ —Å–∫–æ—Ä–æ—Å—Ç–∏

"@

# –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –¥–∞—ë–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
if (Test-Path $pythonResultsFile) {
    $pythonData = Get-Content $pythonResultsFile | ConvertFrom-Json

    if ($pythonData.performance) {
        $speeds = @{}
        foreach ($eph in $pythonData.performance.PSObject.Properties) {
            if (-not $eph.Value.error) {
                $speeds[$eph.Name] = $eph.Value.median_ms
            }
        }

        if ($speeds.Count -gt 0) {
            $fastest = ($speeds.GetEnumerator() | Sort-Object Value | Select-Object -First 1)
            $slowest = ($speeds.GetEnumerator() | Sort-Object Value | Select-Object -Last 1)

            $finalReport += "`n**–°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è SPICE**: **$($fastest.Name)** ($([math]::Round($fastest.Value, 3)) ms median) ‚úÖ`n"
            $finalReport += "**–°–∞–º–∞—è –º–µ–¥–ª–µ–Ω–Ω–∞—è SPICE**: **$($slowest.Name)** ($([math]::Round($slowest.Value, 3)) ms median)`n"
        }
    }
}

if (Test-Path $swissResultsFile) {
    $swissData = Get-Content $swissResultsFile | ConvertFrom-Json

    if ($swissData.performance -and -not $swissData.performance.error) {
        $finalReport += "`n**Swiss Ephemeris (FFI)**: $([math]::Round($swissData.performance.median_ms, 3)) ms median`n"
    }
}

$finalReport += @"

### –ü–æ —Ä–∞–∑–º–µ—Ä—É —Ñ–∞–π–ª–æ–≤

| –≠—Ñ–µ–º–µ—Ä–∏–¥–∞    | –†–∞–∑–º–µ—Ä       | –ü–æ–∫—Ä—ã—Ç–∏–µ            | –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å   |
|--------------|--------------|---------------------|-----------------|
| **DE440**    | ~97.5 MB     | 1,100 –ª–µ—Ç           | 88.6 KB/–≥–æ–¥ ‚úÖ  |
| **DE431**    | ~5.2 GB      | 30,390 –ª–µ—Ç          | 171 KB/–≥–æ–¥      |
| **EPM2021**  | ~147 MB      | 427 –ª–µ—Ç             | 344 KB/–≥–æ–¥      |
| **Swiss Eph**| ~200 MB      | Variable (600 –ª–µ—Ç/—Ñ–∞–π–ª) | ~333 KB/–≥–æ–¥ |

**–°–∞–º–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è**: JPL DE440 (–ª—É—á—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä/–ø–æ–∫—Ä—ã—Ç–∏–µ) ‚úÖ

---

## 6Ô∏è‚É£  –í–´–í–û–î–´

### –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è

‚úÖ **EPM2021 —Å–∞–º—ã–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤** (2 –¥–Ω—è vs 4-16 –¥–Ω–µ–π)
‚úÖ **JPL DE431 —Å–∞–º—ã–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –¥–ª—è –ø–ª–∞–Ω–µ—Ç** (32 –¥–Ω—è vs 100-600 –¥–Ω–µ–π)
‚ö†Ô∏è  **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è JPL/–ò–ü–ê –Ω–µ—Ç–æ—á–Ω–∞** - —Ä–µ–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –Ω–∞ 50-87%!

### –¢–æ—á–Ω–æ—Å—Ç—å

‚úÖ **EPM2021**: ~29 km median (–æ—Ç–ª–∏—á–Ω–æ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø–ª–∞–Ω–µ—Ç)
‚úÖ **JPL DE440/DE431**: sub-meter –¥–æ meter (–Ω–∞—É—á–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç)
‚ö†Ô∏è  **Swiss Eph**: ~84M km median distance error (–Ω–æ –æ—Ç–ª–∏—á–Ω–∞—è —É–≥–ª–æ–≤–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å!)

### –°–∫–æ—Ä–æ—Å—Ç—å

–í—Å–µ —ç—Ñ–µ–º–µ—Ä–∏–¥—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø—Ä–∏–µ–º–ª–µ–º—É—é —Å–∫–æ—Ä–æ—Å—Ç—å (<5 ms median –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞).
SPICE format —á–µ—Ä–µ–∑ calceph –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º.

### –ò—Ç–æ–≥–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è

üèÜ **–ì–∏–±—Ä–∏–¥–Ω—ã–π –ø–æ–¥—Ö–æ–¥**:
- **EPM2021** –¥–ª—è Sun, Moon, Earth, EMB (—É–ª—É—á—à–µ–Ω–Ω—ã–µ LLR, 2 –¥–Ω—è)
- **JPL DE440** –¥–ª—è –ø–ª–∞–Ω–µ—Ç Mercury-Pluto (–Ω–∞—É—á–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å, 32 –¥–Ω—è)
- **Swiss Ephemeris** –¥–ª—è –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É–∑–ª–æ–≤ –∏ —Ü–µ–Ω—Ç–∞–≤—Ä–æ–≤ (Chiron, Pholus, Lilith)

–≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏—Ç:
- ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–æ–≤
- ‚úÖ –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤
- ‚úÖ –ü–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–ª

---

**–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**:
- Python: `tools/comprehensive_comparison.py` (SPICE via calceph)
- PHP: `test_swiss_comparison.php` (Swiss Eph via FFI)
- PowerShell: `run_comprehensive_comparison.ps1` (–º–∞—Å—Ç–µ—Ä-—Å–∫—Ä–∏–ø—Ç)

**–î–∞—Ç–∞**: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
"@

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞
$outputFile = "COMPREHENSIVE_EPHEMERIS_COMPARISON.md"
$finalReport | Out-File -FilePath $outputFile -Encoding UTF8

Write-Host "‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç —Å–æ–∑–¥–∞–Ω: $outputFile" -ForegroundColor Green
Write-Host ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host "üìä –ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê" -ForegroundColor Green
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host ("=" * 79) -ForegroundColor Cyan
Write-Host ""

if ($pythonSuccess) {
    Write-Host "‚úÖ Python —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã" -ForegroundColor Green
    if (Test-Path $pythonResultsFile) {
        Write-Host "   üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: $pythonResultsFile" -ForegroundColor Gray
    }
}

if ($swissSuccess) {
    Write-Host "‚úÖ Swiss Eph —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã" -ForegroundColor Green
    if (Test-Path $swissResultsFile) {
        Write-Host "   üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: $swissResultsFile" -ForegroundColor Gray
    }
}

Write-Host ""
Write-Host "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç: $outputFile" -ForegroundColor Cyan
Write-Host ""
Write-Host "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:" -ForegroundColor Yellow
Write-Host "  code $outputFile" -ForegroundColor Gray
Write-Host ""
